[Program]
Parse and save schema from arguments.

Iterate in a line-based manner through input.
Use schema to create and save an INI section for each.
Ignore (+ note) invalid lines.
Ignore comment lines.

Iterate through saved INI sections.
Print them.

[Program.Type]
Filter.

//  \\  //  \\  //  \\  //  \\

[Architecture]
This is a simple Java program, so let's assume we have no access to functional-style streaming - i.e. do this imperatively.

[Architecture.Components]
A - Line-based file reader
B - Line-based file writer
C - DSV pull parser on A
C - DSV-INI translation function
D - Array list and a loop

[Architecture.Sketch]

class DsvIniDisplay {

	private static class Section {
		String name;
		String[] propertyNames;
		String[] propertyValues;
	}

	private static class Schema {
		String[] keys;
		int sectionNameKeyIndex;
	}

	public static void main(String... args) {
		// Parse arguments
		if (argsAreInvalid(args)) {
			printHelp(); System.exit(1);
		}
		if (argsAskForHelp(args)) {
			printHelp(); System.exit(0);
		}
		Schema schema = parseSchema(args);

		// Prepare components		
		Parser parser = new Parser(System.in, schema);
		Printer printer = new Printer(System.out);
		List<??> sections = new LinkedList<??>();

		// Filter loop
		parsing: while (parser.hasNext()) {
			Section section = parser.next();
			
			for (?? existingSection: sections) {
				if (existingSection.name.equals(section.name)) {
					continue parsing;
				}
			}
			// O(N^2)!! use a HashMap for sections instead ?

			sections.add(section);
		}

		// Left with the sections we need to print. Do so
		for (?? section: sections.getAll()) {
			printer.print(section);
		}
	}

}

